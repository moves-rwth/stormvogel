// Find music track on shuffle player

mdp

// constants
const int N=100; // Number of tracks
const int K=42;  // Track to find

module search

	initial : bool init false;
	cur : [0..N-1] init 0;

	[] (!initial) -> 1/N : (cur'=0) & (initial'=true)
                       + 1/N : (cur'=1) & (initial'=true)
                       + 1/N : (cur'=2) & (initial'=true)
                       + 1/N : (cur'=3) & (initial'=true)
                       + 1/N : (cur'=4) & (initial'=true)
                       + 1/N : (cur'=5) & (initial'=true)
                       + 1/N : (cur'=6) & (initial'=true)
                       + 1/N : (cur'=7) & (initial'=true)
                       + 1/N : (cur'=8) & (initial'=true)
                       + 1/N : (cur'=9) & (initial'=true)
                       + 1/N : (cur'=10) & (initial'=true)
                       + 1/N : (cur'=11) & (initial'=true)
                       + 1/N : (cur'=12) & (initial'=true)
                       + 1/N : (cur'=13) & (initial'=true)
                       + 1/N : (cur'=14) & (initial'=true)
                       + 1/N : (cur'=15) & (initial'=true)
                       + 1/N : (cur'=16) & (initial'=true)
                       + 1/N : (cur'=17) & (initial'=true)
                       + 1/N : (cur'=18) & (initial'=true)
                       + 1/N : (cur'=19) & (initial'=true)
                       + 1/N : (cur'=20) & (initial'=true)
                       + 1/N : (cur'=21) & (initial'=true)
                       + 1/N : (cur'=22) & (initial'=true)
                       + 1/N : (cur'=23) & (initial'=true)
                       + 1/N : (cur'=24) & (initial'=true)
                       + 1/N : (cur'=25) & (initial'=true)
                       + 1/N : (cur'=26) & (initial'=true)
                       + 1/N : (cur'=27) & (initial'=true)
                       + 1/N : (cur'=28) & (initial'=true)
                       + 1/N : (cur'=29) & (initial'=true)
                       + 1/N : (cur'=30) & (initial'=true)
                       + 1/N : (cur'=31) & (initial'=true)
                       + 1/N : (cur'=32) & (initial'=true)
                       + 1/N : (cur'=33) & (initial'=true)
                       + 1/N : (cur'=34) & (initial'=true)
                       + 1/N : (cur'=35) & (initial'=true)
                       + 1/N : (cur'=36) & (initial'=true)
                       + 1/N : (cur'=37) & (initial'=true)
                       + 1/N : (cur'=38) & (initial'=true)
                       + 1/N : (cur'=39) & (initial'=true)
                       + 1/N : (cur'=40) & (initial'=true)
                       + 1/N : (cur'=41) & (initial'=true)
                       + 1/N : (cur'=42) & (initial'=true)
                       + 1/N : (cur'=43) & (initial'=true)
                       + 1/N : (cur'=44) & (initial'=true)
                       + 1/N : (cur'=45) & (initial'=true)
                       + 1/N : (cur'=46) & (initial'=true)
                       + 1/N : (cur'=47) & (initial'=true)
                       + 1/N : (cur'=48) & (initial'=true)
                       + 1/N : (cur'=49) & (initial'=true)
                       + 1/N : (cur'=50) & (initial'=true)
                       + 1/N : (cur'=51) & (initial'=true)
                       + 1/N : (cur'=52) & (initial'=true)
                       + 1/N : (cur'=53) & (initial'=true)
                       + 1/N : (cur'=54) & (initial'=true)
                       + 1/N : (cur'=55) & (initial'=true)
                       + 1/N : (cur'=56) & (initial'=true)
                       + 1/N : (cur'=57) & (initial'=true)
                       + 1/N : (cur'=58) & (initial'=true)
                       + 1/N : (cur'=59) & (initial'=true)
                       + 1/N : (cur'=60) & (initial'=true)
                       + 1/N : (cur'=61) & (initial'=true)
                       + 1/N : (cur'=62) & (initial'=true)
                       + 1/N : (cur'=63) & (initial'=true)
                       + 1/N : (cur'=64) & (initial'=true)
                       + 1/N : (cur'=65) & (initial'=true)
                       + 1/N : (cur'=66) & (initial'=true)
                       + 1/N : (cur'=67) & (initial'=true)
                       + 1/N : (cur'=68) & (initial'=true)
                       + 1/N : (cur'=69) & (initial'=true)
                       + 1/N : (cur'=70) & (initial'=true)
                       + 1/N : (cur'=71) & (initial'=true)
                       + 1/N : (cur'=72) & (initial'=true)
                       + 1/N : (cur'=73) & (initial'=true)
                       + 1/N : (cur'=74) & (initial'=true)
                       + 1/N : (cur'=75) & (initial'=true)
                       + 1/N : (cur'=76) & (initial'=true)
                       + 1/N : (cur'=77) & (initial'=true)
                       + 1/N : (cur'=78) & (initial'=true)
                       + 1/N : (cur'=79) & (initial'=true)
                       + 1/N : (cur'=80) & (initial'=true)
                       + 1/N : (cur'=81) & (initial'=true)
                       + 1/N : (cur'=82) & (initial'=true)
                       + 1/N : (cur'=83) & (initial'=true)
                       + 1/N : (cur'=84) & (initial'=true)
                       + 1/N : (cur'=85) & (initial'=true)
                       + 1/N : (cur'=86) & (initial'=true)
                       + 1/N : (cur'=87) & (initial'=true)
                       + 1/N : (cur'=88) & (initial'=true)
                       + 1/N : (cur'=89) & (initial'=true)
                       + 1/N : (cur'=90) & (initial'=true)
                       + 1/N : (cur'=91) & (initial'=true)
                       + 1/N : (cur'=92) & (initial'=true)
                       + 1/N : (cur'=93) & (initial'=true)
                       + 1/N : (cur'=94) & (initial'=true)
                       + 1/N : (cur'=95) & (initial'=true)
                       + 1/N : (cur'=96) & (initial'=true)
                       + 1/N : (cur'=97) & (initial'=true)
                       + 1/N : (cur'=98) & (initial'=true)
                       + 1/N : (cur'=99) & (initial'=true)
		       ;
	[next]    (initial) -> 1 : (cur'=((cur+1) % N));
	[shuffle] (initial) -> 1/N : (cur'=0)
                                     + 1/N : (cur'=1)
                                     + 1/N : (cur'=2)
                                     + 1/N : (cur'=3)
                                     + 1/N : (cur'=4)
                                     + 1/N : (cur'=5)
                                     + 1/N : (cur'=6)
                                     + 1/N : (cur'=7)
                                     + 1/N : (cur'=8)
                                     + 1/N : (cur'=9)
                                     + 1/N : (cur'=10)
                                     + 1/N : (cur'=11)
                                     + 1/N : (cur'=12)
                                     + 1/N : (cur'=13)
                                     + 1/N : (cur'=14)
                                     + 1/N : (cur'=15)
                                     + 1/N : (cur'=16)
                                     + 1/N : (cur'=17)
                                     + 1/N : (cur'=18)
                                     + 1/N : (cur'=19)
                                     + 1/N : (cur'=20)
                                     + 1/N : (cur'=21)
                                     + 1/N : (cur'=22)
                                     + 1/N : (cur'=23)
                                     + 1/N : (cur'=24)
                                     + 1/N : (cur'=25)
                                     + 1/N : (cur'=26)
                                     + 1/N : (cur'=27)
                                     + 1/N : (cur'=28)
                                     + 1/N : (cur'=29)
                                     + 1/N : (cur'=30)
                                     + 1/N : (cur'=31)
                                     + 1/N : (cur'=32)
                                     + 1/N : (cur'=33)
                                     + 1/N : (cur'=34)
                                     + 1/N : (cur'=35)
                                     + 1/N : (cur'=36)
                                     + 1/N : (cur'=37)
                                     + 1/N : (cur'=38)
                                     + 1/N : (cur'=39)
                                     + 1/N : (cur'=40)
                                     + 1/N : (cur'=41)
                                     + 1/N : (cur'=42)
                                     + 1/N : (cur'=43)
                                     + 1/N : (cur'=44)
                                     + 1/N : (cur'=45)
                                     + 1/N : (cur'=46)
                                     + 1/N : (cur'=47)
                                     + 1/N : (cur'=48)
                                     + 1/N : (cur'=49)
                                     + 1/N : (cur'=50)
                                     + 1/N : (cur'=51)
                                     + 1/N : (cur'=52)
                                     + 1/N : (cur'=53)
                                     + 1/N : (cur'=54)
                                     + 1/N : (cur'=55)
                                     + 1/N : (cur'=56)
                                     + 1/N : (cur'=57)
                                     + 1/N : (cur'=58)
                                     + 1/N : (cur'=59)
                                     + 1/N : (cur'=60)
                                     + 1/N : (cur'=61)
                                     + 1/N : (cur'=62)
                                     + 1/N : (cur'=63)
                                     + 1/N : (cur'=64)
                                     + 1/N : (cur'=65)
                                     + 1/N : (cur'=66)
                                     + 1/N : (cur'=67)
                                     + 1/N : (cur'=68)
                                     + 1/N : (cur'=69)
                                     + 1/N : (cur'=70)
                                     + 1/N : (cur'=71)
                                     + 1/N : (cur'=72)
                                     + 1/N : (cur'=73)
                                     + 1/N : (cur'=74)
                                     + 1/N : (cur'=75)
                                     + 1/N : (cur'=76)
                                     + 1/N : (cur'=77)
                                     + 1/N : (cur'=78)
                                     + 1/N : (cur'=79)
                                     + 1/N : (cur'=80)
                                     + 1/N : (cur'=81)
                                     + 1/N : (cur'=82)
                                     + 1/N : (cur'=83)
                                     + 1/N : (cur'=84)
                                     + 1/N : (cur'=85)
                                     + 1/N : (cur'=86)
                                     + 1/N : (cur'=87)
                                     + 1/N : (cur'=88)
                                     + 1/N : (cur'=89)
                                     + 1/N : (cur'=90)
                                     + 1/N : (cur'=91)
                                     + 1/N : (cur'=92)
                                     + 1/N : (cur'=93)
                                     + 1/N : (cur'=94)
                                     + 1/N : (cur'=95)
                                     + 1/N : (cur'=96)
                                     + 1/N : (cur'=97)
                                     + 1/N : (cur'=98)
                                     + 1/N : (cur'=99)
			             ;

endmodule

// labels
label "found" = initial & cur=K-1;
label "avoid" = initial & cur>=0 & cur <= 9;

// rewards
rewards "steps"
	initial : 1;
endrewards
